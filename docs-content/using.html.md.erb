---
title: Using Splunk Firehose Nozzle for PCF
owner: Partners
---

This topic describes how to use Splunk Firehose Nozzle for PCF. After installing & configuring Splunk Firehose Nozzle for PCF, PCF operators can then navigate in the browser to the URL of their existing Splunk Enterprise deployment to immediately search, report, visualize and alert on PCF Firehose data.

The following assumes basic familiarty on how to run searches, save reports, and create dashboards in Splunk Enterprise. If you're new to Splunk, start with the [Search Tutorial](https://docs.splunk.com/Documentation/Splunk/6.5.0/SearchTutorial/WelcometotheSearchTutorial) which will show you how to search data and create simple dashboards. Refer [here](https://docs.splunk.com/Documentation/Splunk) for complete list of search & report manuals, from generating visualizations to creating alerts based on the health of your foundation and the performance of the applications.

##<a id='search'></a>Search Firehose Data

As part of configuring the tile, the event types to be forwared from PCF firehose to Splunk Enterprise are selected by the user, and will be assigned the following Splunk sourcetypes by default:

  PCF Firehose event type | Splunk sourcetype
  --- | ---
  Error | `cf:error`
  HttpStartStop | `cf:httpstartstop`
  LogMessage | `cf:logmessage`
  ContainerMetric | `cf:containermetric`
  CounterEvent | `cf:counterevent`
  ValueMetric | `cf:valuemetric`

You can therefore search relevant event type using Splunk sourcetypes. For example:

Search is the primary way users navigate data in Splunk Enterprise. You can write a search to retrieve events from an index, use statistical commands to calculate metrics and generate reports, search for specific conditions within a rolling time window, identify patterns in your data, predict future trends, and so on. Searches can be saved as reports and used to power dashboard panels.

##<a id='report'></a>Report & Visualize Firehose Data

Build your own reports & dashboards from Firehose events. For a started dashboards, you can [use Splunk Add-on for Cloud Foundry](#add-on)

##<a id='alert'></a>Alert on Firehose Data

##<a id='add-on'></a>Use Splunk Add-on for Cloud Foundry

##<a id='troubleshooting'></a> Advanced Troubleshooting

#### <a id='architecture'></a> Architecture Overview

Before troubleshooting it's useful to understand exactly what the tile installs.
Each vm contains two jobs:

* **splunk-nozzle**: This job is a small application that listens to the Cloud Foundry
[Loggregator's firehose](https://github.com/cloudfoundry/loggregator). When configured
to, the nozzle will also connect back to the Cloud Foundry API to collect and cache application metadata
(enriching events with additional information).
* **splunk-forwarder**: This job is a Splunk
[heavy forwarder](https://docs.splunk.com/Splexicon:Heavyforwarder). It sets up a local
[HTTP event collector](http://dev.splunk.com/view/event-collector/SP-CAAAE6M) to
receive events from the nozzle and then sends them on to the configured indexer.

The logging system will round-robin events across the `splunk-nozzle` vm instances. Each
`splunk-nozzle` job will send the events it received locally to the
co-loated `splunk-forwarder`.

#### <a id='walkthrough'></a> Troubleshooting Walkthrough

The pre-requisite to trouble shooting the Nozzle is
[connecting to the PCF deployment's bosh](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html)

Having done that, the [bosh logs](https://bosh.io/docs/job-logs.html)
command is a useful place to start debugging.

```
bosh logs splunk-nozzle 0
```

This will download a local copy of the nozzle's logs and the control script that starts
the Splunk forwarder deamon. This could illuminate issues. For example, seeing

```
goroutine 28 [running]:
...
panic: Non-ok response code [503] from splunk: {"text":"Server is busy","code":9}
...
```

would point an operator toward failure in the communication between the nozzle and
its co-located Splunk forwarder.

To view the Splunk forwarder's logs, look through
`/var/vcap/packages/splunk/var/log` on the nozzle's vms.

**todo Roy: add some useful info/links to debugging a Splunk forwarder**
